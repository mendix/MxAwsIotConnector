// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package tests.proxies;

public class AwsAccounts
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject awsAccountsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Tests.AwsAccounts";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		AccountName("AccountName"),
		AwsAccessKeyId("AwsAccessKeyId"),
		AwsSecretAccessKey("AwsSecretAccessKey"),
		DefaultRegion("DefaultRegion");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AwsAccounts(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Tests.AwsAccounts"));
	}

	protected AwsAccounts(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject awsAccountsMendixObject)
	{
		if (awsAccountsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Tests.AwsAccounts", awsAccountsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Tests.AwsAccounts");

		this.awsAccountsMendixObject = awsAccountsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AwsAccounts.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static tests.proxies.AwsAccounts initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return tests.proxies.AwsAccounts.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static tests.proxies.AwsAccounts initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new tests.proxies.AwsAccounts(context, mendixObject);
	}

	public static tests.proxies.AwsAccounts load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return tests.proxies.AwsAccounts.initialize(context, mendixObject);
	}

	public static java.util.List<tests.proxies.AwsAccounts> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<tests.proxies.AwsAccounts> result = new java.util.ArrayList<tests.proxies.AwsAccounts>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Tests.AwsAccounts" + xpathConstraint))
			result.add(tests.proxies.AwsAccounts.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of AccountName
	 */
	public final java.lang.String getAccountName()
	{
		return getAccountName(getContext());
	}

	/**
	 * @param context
	 * @return value of AccountName
	 */
	public final java.lang.String getAccountName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AccountName.toString());
	}

	/**
	 * Set value of AccountName
	 * @param accountname
	 */
	public final void setAccountName(java.lang.String accountname)
	{
		setAccountName(getContext(), accountname);
	}

	/**
	 * Set value of AccountName
	 * @param context
	 * @param accountname
	 */
	public final void setAccountName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String accountname)
	{
		getMendixObject().setValue(context, MemberNames.AccountName.toString(), accountname);
	}

	/**
	 * @return value of AwsAccessKeyId
	 */
	public final java.lang.String getAwsAccessKeyId()
	{
		return getAwsAccessKeyId(getContext());
	}

	/**
	 * @param context
	 * @return value of AwsAccessKeyId
	 */
	public final java.lang.String getAwsAccessKeyId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AwsAccessKeyId.toString());
	}

	/**
	 * Set value of AwsAccessKeyId
	 * @param awsaccesskeyid
	 */
	public final void setAwsAccessKeyId(java.lang.String awsaccesskeyid)
	{
		setAwsAccessKeyId(getContext(), awsaccesskeyid);
	}

	/**
	 * Set value of AwsAccessKeyId
	 * @param context
	 * @param awsaccesskeyid
	 */
	public final void setAwsAccessKeyId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String awsaccesskeyid)
	{
		getMendixObject().setValue(context, MemberNames.AwsAccessKeyId.toString(), awsaccesskeyid);
	}

	/**
	 * @return value of AwsSecretAccessKey
	 */
	public final java.lang.String getAwsSecretAccessKey()
	{
		return getAwsSecretAccessKey(getContext());
	}

	/**
	 * @param context
	 * @return value of AwsSecretAccessKey
	 */
	public final java.lang.String getAwsSecretAccessKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AwsSecretAccessKey.toString());
	}

	/**
	 * Set value of AwsSecretAccessKey
	 * @param awssecretaccesskey
	 */
	public final void setAwsSecretAccessKey(java.lang.String awssecretaccesskey)
	{
		setAwsSecretAccessKey(getContext(), awssecretaccesskey);
	}

	/**
	 * Set value of AwsSecretAccessKey
	 * @param context
	 * @param awssecretaccesskey
	 */
	public final void setAwsSecretAccessKey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String awssecretaccesskey)
	{
		getMendixObject().setValue(context, MemberNames.AwsSecretAccessKey.toString(), awssecretaccesskey);
	}

	/**
	 * @return value of DefaultRegion
	 */
	public final java.lang.String getDefaultRegion()
	{
		return getDefaultRegion(getContext());
	}

	/**
	 * @param context
	 * @return value of DefaultRegion
	 */
	public final java.lang.String getDefaultRegion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DefaultRegion.toString());
	}

	/**
	 * Set value of DefaultRegion
	 * @param defaultregion
	 */
	public final void setDefaultRegion(java.lang.String defaultregion)
	{
		setDefaultRegion(getContext(), defaultregion);
	}

	/**
	 * Set value of DefaultRegion
	 * @param context
	 * @param defaultregion
	 */
	public final void setDefaultRegion(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String defaultregion)
	{
		getMendixObject().setValue(context, MemberNames.DefaultRegion.toString(), defaultregion);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return awsAccountsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final tests.proxies.AwsAccounts that = (tests.proxies.AwsAccounts) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Tests.AwsAccounts";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
