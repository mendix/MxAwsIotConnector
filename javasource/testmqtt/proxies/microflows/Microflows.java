// This file was generated by Mendix Modeler 7.23.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testmqtt.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the TestMqtt module
	public static void onMessage_bme680(IContext context, java.lang.String _payload, java.lang.String _topic)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Payload", _payload);
			params.put("Topic", _topic);
			Core.execute(context, "TestMqtt.OnMessage_bme680", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onMessage_meteoserver_zeeweer(IContext context, java.lang.String _payload, java.lang.String _topic)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Payload", _payload);
			params.put("Topic", _topic);
			Core.execute(context, "TestMqtt.OnMessage_meteoserver_zeeweer", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onMessage_weerlive_10min(IContext context, java.lang.String _payload, java.lang.String _topic)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Payload", _payload);
			params.put("Topic", _topic);
			Core.execute(context, "TestMqtt.OnMessage_weerlive_10min", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.math.BigDecimal string_to_Decimal(IContext context, java.lang.String _stringValue)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("stringValue", _stringValue);
			return (java.math.BigDecimal)Core.execute(context, "TestMqtt.String_to_Decimal", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.Date string_to_TimeStamp(IContext context, java.lang.String _timestamp)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("timestamp", _timestamp);
			return (java.util.Date)Core.execute(context, "TestMqtt.String_to_TimeStamp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void testSubscribeMqttTopic(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "TestMqtt.TestSubscribeMqttTopic", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}